{"version":3,"file":"app.aa0f62d1ce4b79ce5ccb.bundle.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AAEA;AACA;AACA;;AAJA;;AAAA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAOA;;AAvBA;AAAA;;;;;;;;;;;;;;ACJA;AAEA;AAAA;AACA;AACA;AAJA;;;;;;;;;;;;;;;;ACAA;AACA;AAEA;AACA;AAIA;;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;ACdA;;;;;;AADA;AACA;AAGA;AAIA;AAAA;AAAA;AACA;AACA;;AANA;;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AACA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAbA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAnBA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAGA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAxBA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AA+BA;AACA;;AAhCA;AAmCA;AACA;AACA;;AArCA;AAAA;AAuCA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;AAAA;AAGA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAvCA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACHA;;;;;;AADA;AACA;AAGA;AAIA;AAAA;AAAA;AACA;AACA;;AANA;;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AARA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AACA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAZA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAmBA;AACA;AACA;AACA;;AAtBA;AAyBA;AACA;AACA;AACA;;AA5BA;AA+BA;AACA;AACA;;AAjCA;AAAA;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AAGA;AAGA;AAAA;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAXA;;AAAA;;AAAA;AAgBA;;AACA;AACA;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAjCA;AAmCA;;AACA;AACA;AAGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAnDA;AAqDA;;AACA;;AACA;AACA;AAKA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAKA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;AA5FA;AA8FA;;AACA;AACA;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AApHA;AAsHA;;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAnIA;AAqIA;;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAMA;;AACA;AAAA;AAAA;AAAA;;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;AArKA;AAwKA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAd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","sources":["webpack://ts410/./src/app.js","webpack://ts410/./src/appConfig.js","webpack://ts410/./src/main.js","webpack://ts410/./src/modules/quiz/editQuiz.js","webpack://ts410/./src/modules/quiz/quiz.js","webpack://ts410/./src/resources/data/dataServices.js","webpack://ts410/./src/resources/data/quiz.js","webpack://ts410/./src/resources/editor/editor.js","webpack://ts410/./src/resources/index.js","webpack://ts410/./src/app.html","webpack://ts410/./src/modules/quiz/editQuiz.html","webpack://ts410/./src/modules/quiz/quiz.html","webpack://ts410/./src/resources/editor/editor.html"],"sourcesContent":["import { inject } from 'aurelia-framework';\nimport { Router } from \"aurelia-router\";\n\n@inject(Router)\nexport class App {\n\n  constructor(router){\n    this.router = router;\n  }\n\n  configureRouter(config, router) {\n    this.router = router;\n    config.title = 'KB';\n    config.map([\n      {\n        route: ['', 'quiz'],\n        moduleId: PLATFORM.moduleName('./modules/quiz/quiz'),\n        name: 'Quiz',\n        settings: { auth: false, roles: [] }\n      },\n      {\n        route: 'admin',\n        moduleId: PLATFORM.moduleName('./modules/quiz/editQuiz'),\n        name: 'EdistQuiz',\n        settings: { auth: false, roles: [] }\n      }\n    ]);\n  }\n}","export class AppConfig {\r\n\r\n    constructor(){\r\n        this.screenHeight = $(window).height();\r\n    }\r\n\r\n    HOST = location.origin;\r\n\r\n    BASE_URL = \"http://localhost\";\r\n\r\n    // BASE_URL = this.HOST;\r\n}","import environment from '../config/environment.json';\nimport {PLATFORM} from 'aurelia-pal';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature(PLATFORM.moduleName('resources/index'));\n\n  aurelia.use.developmentLogging(environment.debug ? 'debug' : 'warn');\n\n  if (environment.testing) {\n    aurelia.use.plugin(PLATFORM.moduleName('aurelia-testing'));\n  }\n\n  aurelia.start().then(() => aurelia.setRoot(PLATFORM.moduleName('app')));\n}\n","import {inject} from 'aurelia-framework';\r\nimport {QuizServices} from '../../resources/data/quiz';\r\n\r\n@inject(QuizServices)\r\nexport class EditQuiz {\r\n\tshowQuestions = true;\r\n\tquestionIndex = 0;\r\n\r\n\tconstructor(quiz){\r\n\t\tthis.quiz = quiz;\r\n\t}\r\n\r\n\tasync activate(){\r\n        await this.quiz.getQuizArray();\r\n        this.showTable = true;\r\n    }\r\n\r\n    async selectQuiz(){\r\n        await this.quiz.getQuestionArray(this.selectedUnit);\r\n        this.currentFlash = this.quiz.questionArray[0].flash;\r\n        this.currentCard = \"\";\r\n    }\r\n\r\n    async selectQuestion(question){\r\n        await this.quiz.getQuestion(question._id);\r\n        this.showTable = false;\r\n    }\r\n\r\n    async saveQuestion(){\r\n        await this.quiz.saveQuestion();\r\n        await this.selectQuiz();\r\n        this.showTable = true;\r\n    }\r\n\r\n    back(){\r\n        this.showTable = true;\r\n    }\r\n\r\n    newQuestion(){\r\n        this.quiz.newQuestion(this.selectedUnit);\r\n        this.showTable = false;\r\n    }\r\n\r\n    async deleteQuestion(){\r\n        this.quiz.deleteQuestion();\r\n        await this.selectQuiz();\r\n        this.showTable = true;\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {QuizServices} from '../../resources/data/quiz';\r\n\r\n@inject(QuizServices)\r\nexport class QuizTool {\r\n\tshowQuestions = true;\r\n\tquestionIndex = 0;\r\n\r\n\tconstructor(quiz){\r\n\t\tthis.quiz = quiz;\r\n\t}\r\n\r\n\tasync activate(){\r\n        await this.quiz.getQuizArray();\r\n    }\r\n    \r\n    async selectQuiz(){\r\n        await this.quiz.getQuestionArray(this.selectedUnit);\r\n        this.currentFlash = this.quiz.questionArray[0].flash;\r\n        this.currentCard = \"\";\r\n    }\r\n\r\n    previous(){\r\n        this.questionIndex = this.questionIndex > 0 ? this.questionIndex - 1 : 0;\r\n        this.currentFlash = this.quiz.questionArray[this.questionIndex].flash;\r\n        this.showCard = false;\r\n    }\r\n\r\n    next(){\r\n        this.questionIndex = this.questionIndex  < this.quiz.questionArray.length - 1 ? this.questionIndex + 1 : this.quiz.questionArray.length - 1;\r\n        this.currentFlash = this.quiz.questionArray[this.questionIndex].flash;\r\n        this.showCard = false;\r\n    }    \r\n\r\n    showFlashAnswer(){\r\n        this.currentCard = this.quiz.questionArray[this.questionIndex].card;\r\n        this.showCard = true;\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { HttpClient } from 'aurelia-http-client';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { AppConfig } from '../../appConfig';\r\n\r\n@inject(HttpClient, EventAggregator, AppConfig)\r\nexport class DataServices {\r\n    isRequesting = false;\r\n\r\n    constructor(http, eventAggregator, config) {\r\n        this.http = http;\r\n        this.eventAggregator = eventAggregator;\r\n        this.config = config;\r\n\r\n        this.http.configure(x => {\r\n            x.withBaseUrl(this.config.BASE_URL);\r\n        });\r\n    }\r\n\r\n    activate() {\r\n    }\r\n\r\n    get(url) {\r\n        this.isRequesting = true;\r\n        return this.http.createRequest(url)\r\n            .asGet()\r\n            .withHeader('Authorization', 'JWT ' + sessionStorage.getItem('token'))\r\n            .send().then(response => {\r\n                this.isRequesting = false;\r\n                if (!response.isSuccess) {\r\n                    return response;\r\n                } else {\r\n                    return JSON.parse(response.response);\r\n                }\r\n            }).catch(e => {\r\n                this.isRequesting = false;\r\n                console.log(e);\r\n                return { error: true, code: e.statusCode, message: e.statusText };\r\n            });\r\n    }\r\n\r\n    getNoAuth(url) {\r\n        this.isRequesting = true;\r\n        return this.http.createRequest(url)\r\n            .asGet()\r\n            .send().then(response => {\r\n                this.isRequesting = false;\r\n                if (!response.isSuccess) {\r\n                    return response;\r\n                } else {\r\n                    return JSON.parse(response.response);\r\n                }\r\n            }).catch(e => {\r\n                this.isRequesting = false;\r\n                console.log(e);\r\n                return { error: true, code: e.statusCode, message: e.statusText };\r\n            });\r\n    }\r\n\r\n    saveObject(content, url, method) {\r\n        this.isRequesting = true;\r\n        if (method === 'put') {\r\n            return this.http.createRequest(url)\r\n                .asPut()\r\n                .withHeader('Authorization', 'JWT ' + sessionStorage.getItem('token'))\r\n                .withContent(content)\r\n                .send().then(response => {\r\n                    this.isRequesting = false;\r\n                    if (!response.isSuccess) {\r\n                        return response;\r\n                    } else {\r\n                        return JSON.parse(response.response);\r\n                    }\r\n                }).catch(e => {\r\n                    this.isRequesting = false;\r\n                    console.log(e);\r\n                    return { error: true, code: e.statusCode, message: e.statusText };\r\n                });\r\n\r\n        } else if (method === 'post') {\r\n            return this.http.createRequest(url)\r\n                .asPost()\r\n                .withHeader('Authorization', 'JWT ' + sessionStorage.getItem('token'))\r\n                .withContent(content)\r\n                .send().then(response => {\r\n                    this.isRequesting = false;\r\n                    if (!response.isSuccess) {\r\n                        return response;\r\n                    } else {\r\n                        return JSON.parse(response.response);\r\n                    }\r\n                }).catch(e => {\r\n                    this.isRequesting = false;\r\n                    console.log(e);\r\n                    return { error: true, code: e.statusCode, message: e.statusText };\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    deleteObject(url) {\r\n        this.isRequesting = true;\r\n        return this.http.createRequest(url)\r\n            .asDelete()\r\n            .withHeader('Authorization', 'JWT ' + sessionStorage.getItem('token'))\r\n            .send().then(response => {\r\n                this.isRequesting = false;\r\n                if (!response.isSuccess) {\r\n                    return response;\r\n                } else {\r\n                    if (response.statusCode === 204) {\r\n                        return response;\r\n                    } else {\r\n                        return JSON.parse(response.response);\r\n                    }\r\n\r\n                }\r\n            }).catch(e => {\r\n                this.isRequesting = false;\r\n                console.log(e);\r\n                return { error: true, code: e.statusCode, message: e.statusText };\r\n            });\r\n    }\r\n\r\n    login(content, url, ucc) {\r\n        return this.http.createRequest(url)\r\n            .asPost()\r\n            .withBaseUrl(ucc)\r\n            .withContent(content)\r\n            .send().then(response => {\r\n                this.isRequesting = false;\r\n                return JSON.parse(response.response);\r\n            }).catch(e => {\r\n                this.isRequesting = false;\r\n                console.log(e);\r\n                return { error: true, code: e.statusCode, message: e.statusText };\r\n            });\r\n    }\r\n\r\n    uploadFiles(files, url) {\r\n        // this.isRequesting = true;\r\n        this.progress = 0;\r\n        let formData = new FormData();\r\n\r\n        files.forEach((item, index) => {\r\n            formData.append(\"file\" + index, item);\r\n        })\r\n\r\n        return this.http.createRequest(url)\r\n            .asPost()\r\n            .withHeader('Authorization', 'JWT ' + sessionStorage.getItem('token'))\r\n            .withContent(formData)\r\n            .skipContentProcessing()\r\n            .withProgressCallback(progress => {\r\n                console.log(progress.loaded)\r\n                this.eventAggregator.publish('upload-progress', { progress: progress.loaded, total: progress.total });\r\n                this.progress = progress.loaded / progress.total;\r\n            })\r\n            .send().then(response => {\r\n                this.isRequesting = false;\r\n                if (!response.isSuccess) {\r\n                    return response;\r\n                } else {\r\n                    return JSON.parse(response.response);\r\n                }\r\n            }).catch(e => {\r\n                this.isRequesting = false;\r\n                console.log(e);\r\n                return { error: true, code: e.statusCode, message: e.statusText };\r\n            });\r\n\r\n    }\r\n\r\n    processError(obj, message) {\r\n        console.log(obj);\r\n        var msg = (message ? message : \"\") + \" \";\r\n        switch (obj.code) {\r\n            case 404:\r\n                msg = undefined;\r\n                break;\r\n            case 422:\r\n                msg = msg += \"The request was bad.  Contact your UCC.\";\r\n                break;\r\n            case 409:\r\n                msg = msg += \"The record already exists.\";\r\n                break;\r\n            case 500:\r\n                msg = msg += \"An unspecified error occured on the server.  Contact your UCC.\";\r\n                break;\r\n            default:\r\n                msg = msg += \"An unspecified error occured.  Contact your UCC.\"\r\n        }\r\n        if (msg && msg.length > 0) console.log(msg);\r\n    }\r\n\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { DataServices } from '../data/dataServices';\r\n\r\n@inject(DataServices)\r\nexport class QuizServices {\r\n\tQUIZ_URL = 'quiz';\r\n\tQUESTION_URL = 'question';\r\n\r\n\tconstructor(data) {\r\n\t\tthis.data = data;\r\n\t}\r\n\r\n\t//Quizzes\r\n\tasync getQuizArray() {\r\n\t\tthis.quizzesArray = new Array();\r\n\t\ttry {\r\n\t\t\tlet serverResponse = await this.data.get(\"quizzes?order=sortOrder\");\r\n\t\t\tif (!serverResponse.status) {\r\n\t\t\t\tthis.quizzesArray = serverResponse;\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tselectQuiz(index) {\r\n\t\tif (!index) {\r\n\t\t\tthis.selectedQuiz = this.emptyQuiz();\r\n\t\t}\r\n\t}\r\n\r\n\tsetQuiz(doc) {\r\n\t\tthis.selectedQuiz = doc;\r\n\t}\r\n\r\n\temptyQuiz() {\r\n\t\tlet obj = {};\r\n\t\tobj.name = \"\";\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tasync saveQuiz() {\r\n\t\tif (!this.selectedQuiz) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!this.selectedQuiz._id) {\r\n\t\t\tawait this.data.saveObject(this.selectedQuiz, \"quizzes\", \"post\");\r\n\t\t\tawait this.getQuizArray();\r\n\t\t} else {\r\n\t\t\tawait this.data.saveObject(this.selectedQuiz, \"quizzes/\" + this.selectedQuiz._id, \"put\");\r\n\t\t\tawait this.getQuizArray();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tasync deleteQuiz(id) {\r\n\t\tif (id) {\r\n\t\t\tawait this.data.deleteObject(\"quizzes/\" + id);\r\n\t\t\tawait this.getQuizArray();\r\n\t\t\tthis.emptyQuiz();\r\n\t\t}\r\n\t}\r\n\r\n\t//Questions\r\n\tasync getQuestionArray(id) {\r\n\t\tthis.questionArray = new Array();\r\n\t\ttry {\r\n\t\t\tlet serverResponse = await this.data.get(\"questions/quiz/\" + id);\r\n\t\t\tif (!serverResponse.status) {\r\n\t\t\t\tthis.questionArray = serverResponse;\r\n\t\t\t\tthis.questionArray.forEach(item => {\r\n\t\t\t\t\titem.sortOrder = Math.random();\r\n\t\t\t\t});\r\n\t\t\t\tfor (let i = 0; i < this.questionArray.length; i++) {\r\n\t\t\t\t\tfor (let j = 0; j < this.questionArray.length - 1; j++) {\r\n\t\t\t\t\t\tif (this.questionArray[j].sortOrder < this.questionArray[j + 1].sortOrder) {\r\n\t\t\t\t\t\t\tlet temp = this.questionArray[j];\r\n\t\t\t\t\t\t\tthis.questionArray[j] = this.questionArray[j + 1];\r\n\t\t\t\t\t\t\tthis.questionArray[j + 1] = temp;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tselectQuestion(index) {\r\n\t\tif (!index && index !== 0) {\r\n\t\t\tthis.selectedQuestion = this.emptyQuestion();\r\n\t\t} else {\r\n\t\t\tthis.selectedQuestion = this.questionArray[index];\r\n\t\t}\r\n\t}\r\n\r\n\tasync getQuestion(id) {\r\n\t\tlet response = await this.data.get(\"questions/\" + id);\r\n\t\tthis.selectedQuestion = response;\r\n\t}\r\n\r\n\tsetQuestion(doc) {\r\n\t\tthis.selectedQuestion = doc;\r\n\t}\r\n\r\n\tnewQuestion(quizID) {\r\n\t\tthis.selectedQuestion = this.emptyQuestion(quizID);\r\n\t}\r\n\r\n\temptyQuestion(quizID) {\r\n\t\tlet obj = {};\r\n\t\tobj.unit = quizID;\r\n\t\tobj.flash = \"\";\r\n\t\tobj.card = \"\";\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tasync saveQuestion() {\r\n\t\tif (!this.selectedQuestion) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!this.selectedQuestion._id) {\r\n\t\t\tawait this.data.saveObject(this.selectedQuestion, \"questions\", \"post\");\r\n\t\t} else {\r\n\t\t\tawait this.data.saveObject(this.selectedQuestion, \"questions/\" + this.selectedQuestion._id, \"put\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tasync deleteQuestion() {\r\n\t\tif (!this.selectedQuestion) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tawait this.data.deleteObject(\"questions/\" + this.selectedQuestion._id);\r\n\t}\r\n}","import {inject, bindable, bindingMode} from \"aurelia-framework\"\r\nimport {ObserverLocator} from \"aurelia-binding\"\r\n\r\n@inject(Element, ObserverLocator)\r\nexport class Editor {\r\n\r\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) value;\r\n\t@bindable height = 250;\r\n\t@bindable editorid =  \"summernote-\" + this.guid();\r\n\t@bindable toolbar = [\r\n\t\t['style', ['style']],\r\n\t\t['font', ['bold', 'italic', 'underline', 'clear']],\r\n\t\t['color', ['color']],\r\n\t\t['fontname', ['fontname']],\r\n\t\t['fontsize', ['fontsize']],\r\n\t\t['pata', ['ul', 'ol', 'paragraph']],\r\n\t\t['insert', ['picture', 'link', 'table', 'hello']],\r\n\t\t['misc', ['undo', 'redo', 'fullscreen']]\r\n\t];\r\n\t@bindable placeholder;\r\n\r\n\teditor = null;\r\n\r\n\tconstructor(element, observerLocator) {\r\n\t\tthis.element = element;\r\n\t\tthis.subscriptions = [\r\n\t\t\tobserverLocator\r\n\t\t\t\t.getObserver(this, 'value')\r\n\t\t\t\t.subscribe(newValue => {\r\n\t\t\t\t\tif (this.editor && newValue !== this.editor.summernote('code')) {\r\n            this.editor.summernote('code', newValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t]\r\n\t}\r\n\r\n\tattached() {\r\n\t\tvar that = this;\r\n\t\tthis.editor = $(`#${this.editorid}`);\r\n\t\tthis.editor.data('view-model', this);\r\n\t\tthis.editor.summernote({\r\n\t\t\tplaceholder: this.placeholder,\r\n\t\t\theight: this.height,\r\n\t\t\ttoolbar: this.toolbar,\r\n      callbacks: {\r\n        onChange: function(contents) {\r\n\t\t\t\t\tthat.value = contents;\r\n\t\t\t\t\t$(\"#\" +  this.editorid).summernote('editor.saveRange');\r\n\t\t\t\t},\r\n\t\t\t\tonFocus: function(contents){\r\n\t\t\t\t\tconsole.log('');\r\n\t\t\t\t}\r\n\t\t\t\t// onPaste: function(e) {\r\n\t\t\t\t// \tvar node = document.createElement('p');\r\n\t\t\t\t// \t// @param {Node} node\r\n\t\t\t\t// \t$('#summernote').summernote('insertNode', node);\r\n\t\t\t\t// \tconsole.log('Called event paste');\r\n\t\t\t\t// }\r\n      }\r\n\t\t});\r\n    this.editor.summernote('code', this.value);\r\n\t}\r\n\r\n\tdetached() {\r\n\t\tthis.editor.summernote('destroy'); \r\n\t}\r\n\r\n  guid() {\r\n    function s4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n    }\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n      s4() + '-' + s4() + s4() + s4();\r\n  }\r\n\r\n}","export function configure(config) {\n  config.globalResources([\n    PLATFORM.moduleName('./editor/editor')\n  ]);\n}\n","// Module\nvar code = \"<template>\\n  <router-view></router-view>\\n</template>\\n\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-lg-3\\\" style=\\\"margin-top:20px;\\\">\\r\\n                <h3>Unit</h3>\\r\\n                <select value.bind=\\\"selectedUnit\\\" class=\\\"form-control\\\" change.trigger=\\\"selectQuiz()\\\">\\r\\n                    <option value=\\\"\\\"></option>\\r\\n                    <option repeat.for=\\\"unit of quiz.quizzesArray\\\" value=\\\"${unit._id}\\\">${unit.name}</option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n      \\r\\n\\r\\n        <div style=\\\"margin-top:20px;\\\" show.bind=\\\"showTable\\\">\\r\\n            <button style=\\\"margin-bottom:20px;margin-top:20px;\\\" class=\\\"btn btn-primary\\\" click.trigger=\\\"newQuestion()\\\">New</button>\\r\\n            <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr click.trigger=\\\"selectQuestion(question)\\\" repeat.for=\\\"question of quiz.questionArray\\\">\\r\\n                        <td innerhtml.bind='question.flash'></td>\\r\\n                        <td innerhtml.bind='question.card'></td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div show.bind=\\\"!showTable\\\">\\r\\n            <button style=\\\"margin-bottom:20px;margin-top:20px;\\\" class=\\\"btn btn-primary\\\" click.trigger=\\\"saveQuestion()\\\">Save</button>\\r\\n            <button style=\\\"margin-bottom:20px;margin-top:20px;\\\" class=\\\"btn btn-primary\\\" click.trigger=\\\"back()\\\">Back</button>\\r\\n            <button style=\\\"margin-bottom:20px;margin-top:20px;\\\" class=\\\"btn btn-primary\\\" click.trigger=\\\"deleteQuestion()\\\">Delete</button>\\r\\n            <editor  toolbar.bind=\\\"toolbar\\\" value.bind=\\\"quiz.selectedQuestion.flash\\\" height=\\\"250\\\"></editor>\\r\\n\\r\\n            <editor  toolbar.bind=\\\"toolbar\\\" value.bind=\\\"quiz.selectedQuestion.card\\\" height=\\\"250\\\"></editor>\\r\\n        </div>\\r\\n    </div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n    <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col col-lg-3\\\" style=\\\"margin-top:20px;\\\">\\r\\n            <h3>Unit</h3>\\r\\n            <select value.bind=\\\"selectedUnit\\\" class=\\\"form-control\\\" change.trigger=\\\"selectQuiz()\\\">\\r\\n                <option value=\\\"\\\"></option>\\r\\n                <option repeat.for=\\\"unit of quiz.quizzesArray\\\" value=\\\"${unit._id}\\\">${unit.name}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n        <div show.bind=\\\"selectedUnit !== ''\\\" class=\\\"col col-lg-8\\\" style=\\\"margin-top:20px;\\\">\\r\\n\\r\\n            <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n                <Button class=\\\"btn btn-primary\\\" click.trigger=\\\"previous()\\\" disable.bind=\\\"questionIndex == 0\\\">Previous</Button>\\r\\n                <Button style=\\\"margin-left:10px;\\\" class=\\\"btn btn-primary\\\" click.trigger=\\\"next()\\\" disable.bind=\\\"questionIndex == quiz.questionArray.length - 1\\\">Next</Button>\\r\\n                <Button style=\\\"margin-left:10px;\\\" class=\\\"btn btn-primary\\\" click.trigger=\\\"showFlashAnswer()\\\">Show Answer</Button>\\r\\n            </div>\\r\\n            <div class=\\\"float-right\\\"> \\r\\n                <span>${questionIndex + 1} of ${quiz.questionArray.length}</span>\\r\\n            </div>\\r\\n            <div class=\\\"card\\\" style=\\\"margin-top:20px;\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div innerhtml.bind=\\\"currentFlash\\\" ></div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card  bg-light \\\" style=\\\"margin-top:20px;\\\"  show.bind=\\\"showCard\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div innerhtml.bind=\\\"currentCard\\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n</template>\";\n// Exports\nexport default code;","// Module\nvar code = \"<template>\\r\\n\\t<div class=\\\"summernote-host\\\" id.bind=\\\"editorid\\\" ref=\\\"editor\\\"></div>\\r\\n</template>\";\n// Exports\nexport default code;"],"names":[],"sourceRoot":""}